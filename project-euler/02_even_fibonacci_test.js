const assert = require('chai').assert
const sum = require('./02_even_fibonacci')

/*
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
*/

describe('sum.evenFibonacciNumbers', function() {
  it('when sum is zero', function() {
    assert.equal(0, sum.evenFibonacciNumbers(-13))
    assert.equal(0, sum.evenFibonacciNumbers(-1))
    assert.equal(0, sum.evenFibonacciNumbers(0))
    assert.equal(0, sum.evenFibonacciNumbers(1))
  })

  it('below 2', function() {
    assert.equal(2, sum.evenFibonacciNumbers(2))
  })

  it('below 3', function() {
    assert.equal(2, sum.evenFibonacciNumbers(3))
  })

  it('below 4', function() {
    assert.equal(2, sum.evenFibonacciNumbers(4))
  })

  it('below 5', function() {
    assert.equal(2, sum.evenFibonacciNumbers(5))
  })

  it('below 6', function() {
    assert.equal(2, sum.evenFibonacciNumbers(6))
  })

  it('below 8', function() {
    assert.equal(10, sum.evenFibonacciNumbers(8))
  })

  it('below 34', function() {
    assert.equal(44, sum.evenFibonacciNumbers(34))
  })

  it('below 4.000.000', function() {
    assert.equal(4613732, sum.evenFibonacciNumbers(4000000))
  })
})
